CREATE TABLE b_list_rubric 
(
	ID		NUMBER(18)	NOT NULL,
	LID		CHAR(2)		NOT NULL,
	NAME		VARCHAR2(100)	    NULL,
	DESCRIPTION	VARCHAR2(2000)	    NULL,
	SORT		NUMBER(18)	DEFAULT 100 NOT NULL,
	ACTIVE		CHAR(1)		DEFAULT 'Y' NOT NULL,
	AUTO		CHAR(1)		DEFAULT 'N' NOT NULL,
	DAYS_OF_MONTH	VARCHAR2(100)	    NULL,
	DAYS_OF_WEEK	VARCHAR2(15)	    NULL,
	TIMES_OF_DAY	VARCHAR2(255)	    NULL,
	TEMPLATE	VARCHAR2(100)	    NULL,
	LAST_EXECUTED	DATE		    NULL,
	VISIBLE		CHAR(1)		DEFAULT 'Y' NOT NULL,
	FROM_FIELD	VARCHAR2(255)	    NULL,
	CONSTRAINT PK_LIST_RUBRIC_ID PRIMARY KEY (ID),
	CONSTRAINT FK_LIST_RUBRIC_LID FOREIGN KEY (LID) REFERENCES b_lang (LID)
)
/
COMMENT ON COLUMN b_list_rubric.LID IS 'Язык подписки'
/
COMMENT ON COLUMN b_list_rubric.NAME IS 'Название рубрики подписки'
/
COMMENT ON COLUMN b_list_rubric.DESCRIPTION IS 'Описание рубрики для подписчика'
/
COMMENT ON COLUMN b_list_rubric.SORT IS 'Сортировка'
/
COMMENT ON COLUMN b_list_rubric.ACTIVE IS 'Активна ли запись'
/
CREATE SEQUENCE sq_b_list_rubric START WITH 1 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER b_list_rubric_insert
BEFORE INSERT 
ON b_list_rubric
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW 
BEGIN
	IF :NEW.ID IS NULL THEN
	 	SELECT sq_b_list_rubric.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE b_subscription 
(
	ID		NUMBER(18)	NOT NULL,
	DATE_INSERT	DATE		DEFAULT SYSDATE NOT NULL,
	DATE_UPDATE	DATE		    NULL,
	USER_ID		NUMBER(18)	    NULL,
	ACTIVE		CHAR(1)		DEFAULT 'Y' NOT NULL,
	EMAIL		VARCHAR2(255)	NOT NULL,
	FORMAT		VARCHAR2(4)	DEFAULT 'text' NOT NULL,
	CONFIRM_CODE	VARCHAR2(8)	    NULL,
	CONFIRMED	CHAR(1)		DEFAULT 'N' NOT NULL,
	DATE_CONFIRM	DATE		DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_SUBSCRIPTION_ID PRIMARY KEY (ID),
	CONSTRAINT FK_SUBSCRIPTION_USER	FOREIGN KEY (USER_ID) REFERENCES b_user (ID)
)
/
CREATE INDEX IX_DATE_CONFIRM ON b_subscription(CONFIRMED,DATE_CONFIRM)
/
CREATE UNIQUE INDEX UK_SUBSCRIPTION_EMAIL ON B_SUBSCRIPTION (UPPER(EMAIL))
/
COMMENT ON COLUMN  b_subscription.USER_ID IS 'Владелец адреса подписки'
/
COMMENT ON COLUMN  b_subscription.ACTIVE IS 'Активна ли подписка'
/
COMMENT ON COLUMN  b_subscription.EMAIL IS 'Адрес подписки (уникальный)'
/
COMMENT ON COLUMN  b_subscription.FORMAT IS 'Формат письма: text - текст, html - html'
/
COMMENT ON COLUMN  b_subscription.DATE_INSERT IS 'Дата добавления'
/
COMMENT ON COLUMN  b_subscription.DATE_UPDATE IS 'Дата изменения'
/
COMMENT ON COLUMN  b_subscription.CONFIRM_CODE IS 'Код для подтверждения подписки'
/
COMMENT ON COLUMN  b_subscription.CONFIRMED IS 'Подтверждена ли подписка'
/
COMMENT ON COLUMN  b_subscription.DATE_CONFIRM IS 'Дата генерации кода подтверждения'
/
CREATE SEQUENCE sq_b_subscription 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCYCLE
    NOCACHE
    NOORDER
/
CREATE OR REPLACE TRIGGER b_subscription_insert
BEFORE INSERT 
ON b_subscription
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW 
BEGIN
	IF :NEW.ID IS NULL THEN
	 	SELECT sq_b_subscription.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE OR REPLACE TRIGGER  b_subscription_update
BEFORE UPDATE 
ON  b_subscription
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW 
BEGIN
	IF :NEW.DATE_UPDATE IS NOT NULL THEN
		:NEW.DATE_UPDATE := SYSDATE;
	ELSE
		:NEW.DATE_UPDATE := :OLD.DATE_UPDATE;
	END IF;
END;
/
CREATE TABLE b_subscription_rubric 
(
	SUBSCRIPTION_ID	NUMBER(18)	NOT NULL,
	LIST_RUBRIC_ID	NUMBER(18)	NOT NULL,
	CONSTRAINT UK_SUBSCRIPTION_RUBRIC UNIQUE (SUBSCRIPTION_ID,LIST_RUBRIC_ID),
	CONSTRAINT FK_SUBSCR_RUBRIC_RUBRIC FOREIGN KEY (LIST_RUBRIC_ID) REFERENCES b_list_rubric (ID),
	CONSTRAINT FK_SUBSCR_RUBRIC_SUBSCR FOREIGN KEY (SUBSCRIPTION_ID) REFERENCES b_subscription (ID)
)
/
COMMENT ON COLUMN b_subscription_rubric.SUBSCRIPTION_ID IS 'Подписчик'
/
COMMENT ON COLUMN b_subscription_rubric.LIST_RUBRIC_ID IS 'Рубрика подписки'
/
CREATE TABLE b_posting 
(
	ID		NUMBER(18)	NOT NULL,
	TIMESTAMP_X	DATE		DEFAULT SYSDATE NOT NULL,
	STATUS		CHAR(1)		DEFAULT 'D' NOT NULL,
	DATE_SENT	DATE		    NULL,
	SENT_BCC	CLOB		    NULL,
	FROM_FIELD	VARCHAR2(255)	NOT NULL,
	TO_FIELD	VARCHAR2(255)	    NULL,
	BCC_FIELD	CLOB		    NULL,
	EMAIL_FILTER	VARCHAR2(255)	    NULL,
	SUBJECT		VARCHAR2(255)	NOT NULL,
	BODY_TYPE	VARCHAR2(4)	DEFAULT 'text' NOT NULL,
	BODY		CLOB		NOT NULL,
	DIRECT_SEND	CHAR(1)		DEFAULT 'N' NOT NULL,
	CHARSET 	VARCHAR2(50)	    NULL,
	SUBSCR_FORMAT	VARCHAR2(4)	    NULL,
	ERROR_EMAIL	CLOB		    NULL,
	AUTO_SEND_TIME	DATE		    NULL,
	BCC_TO_SEND	CLOB		    NULL,
	CONSTRAINT PK_B_POSTING_ID PRIMARY KEY (ID)
)
/
CREATE SEQUENCE sq_b_posting
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCYCLE
    NOCACHE
    NOORDER
/
CREATE OR REPLACE TRIGGER b_posting_insert
BEFORE INSERT 
ON b_posting
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW 
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT sq_b_posting.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE OR REPLACE TRIGGER b_posting_update
BEFORE UPDATE 
ON b_posting
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW 
BEGIN
	IF :NEW.TIMESTAMP_X IS NOT NULL THEN
		:NEW.TIMESTAMP_X := SYSDATE;
	ELSE
		:NEW.TIMESTAMP_X := :OLD.TIMESTAMP_X;
	END IF;
END;
/
COMMENT ON COLUMN b_posting.TIMESTAMP_X IS 'Дата обновления'
/
COMMENT ON COLUMN b_posting.STATUS IS 'Статус рассылки: D-черновик, S - отправлен, E - ошибка'
/
COMMENT ON COLUMN b_posting.DATE_SENT IS 'Дата отправки'
/
COMMENT ON COLUMN b_posting.SENT_BCC IS 'Кому отправлено'
/
COMMENT ON COLUMN b_posting.FROM_FIELD IS 'Поле "From:" '
/
COMMENT ON COLUMN b_posting.TO_FIELD IS 'Поле "To:"'
/
COMMENT ON COLUMN b_posting.BCC_FIELD IS 'Поле "BCC:"'
/
COMMENT ON COLUMN b_posting.EMAIL_FILTER IS 'Фильтр по адресам'
/
COMMENT ON COLUMN b_posting.SUBJECT IS 'Поле "Subject:"   '
/
COMMENT ON COLUMN b_posting.BODY_TYPE IS 'Тип тела письма (text/html)'
/
COMMENT ON COLUMN b_posting.BODY IS 'Тело письма'
/
COMMENT ON COLUMN b_posting.DIRECT_SEND IS 'Прямая рассылка (получатели в поле To)'
/
COMMENT ON COLUMN b_posting.CHARSET IS 'Кодировка письма'
/
COMMENT ON COLUMN b_posting.SUBSCR_FORMAT IS 'Формат подписки (text/html/NULL)'
/
COMMENT ON COLUMN B_POSTING.ERROR_EMAIL IS 'Error emails (message was not sent). Only for direct mailing.'
/
CREATE TABLE b_posting_rubric 
(
	POSTING_ID	NUMBER(18) NOT NULL,
	LIST_RUBRIC_ID	NUMBER(18) NOT NULL,
	CONSTRAINT UK_POSTING_POSTING_RUBRIC UNIQUE (POSTING_ID,LIST_RUBRIC_ID),
	CONSTRAINT FK_POSTING_RUBRIC_POSTING FOREIGN KEY (POSTING_ID) REFERENCES b_posting (ID),
	CONSTRAINT FK_POSTING_RUBRIC_RUBRIC FOREIGN KEY (LIST_RUBRIC_ID) REFERENCES b_list_rubric (ID)
)
/
CREATE TABLE b_posting_group 
(
	POSTING_ID	NUMBER(18) NOT NULL,
	GROUP_ID	NUMBER(18) NOT NULL,
	CONSTRAINT UK_POSTING_POSTING_GROUP UNIQUE (POSTING_ID,GROUP_ID),
	CONSTRAINT FK_POSTING_GROUP_POSTING FOREIGN KEY (POSTING_ID) REFERENCES b_posting (ID),
	CONSTRAINT FK_POSTING_GROUP_GROUP FOREIGN KEY (GROUP_ID) REFERENCES b_group (ID)
)
/
CREATE TABLE b_posting_file
(
	POSTING_ID	NUMBER(18) NOT NULL,
	FILE_ID		NUMBER(18) NOT NULL,
	CONSTRAINT UK_POSTING_POSTING_FILE UNIQUE (POSTING_ID,FILE_ID),
	CONSTRAINT FK_POSTING_FILE_POSTING FOREIGN KEY (POSTING_ID) REFERENCES b_posting (ID)
)
/

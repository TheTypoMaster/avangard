CREATE TABLE B_LIST_RUBRIC 
(
	ID		INT		NOT NULL IDENTITY(1,1),
	LID		CHAR(2)		NOT NULL,
	NAME		VARCHAR(100)	NULL,
	DESCRIPTION	VARCHAR(2000)	NULL,
	SORT		INT		NOT NULL,
	ACTIVE		CHAR(1)		NOT NULL,
	AUTO		CHAR(1)		NOT NULL,
	DAYS_OF_MONTH	VARCHAR(100)	NULL,
	DAYS_OF_WEEK	VARCHAR(15)	NULL,
	TIMES_OF_DAY	VARCHAR(255)	NULL,
	TEMPLATE	VARCHAR(100)	NULL,
	LAST_EXECUTED	DATETIME	NULL,
	VISIBLE		CHAR(1)		NOT NULL,
	FROM_FIELD	VARCHAR(255)	NULL
)
GO
ALTER TABLE B_LIST_RUBRIC ADD CONSTRAINT PK_B_LIST_RUBRIC PRIMARY KEY (ID)
GO
ALTER TABLE B_LIST_RUBRIC ADD CONSTRAINT DF_B_LIST_RUBRIC_SORT DEFAULT 100 FOR SORT
GO
ALTER TABLE B_LIST_RUBRIC ADD CONSTRAINT DF_B_LIST_RUBRIC_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_LIST_RUBRIC ADD CONSTRAINT DF_B_LIST_RUBRIC_AUTO DEFAULT 'N' FOR AUTO
GO
ALTER TABLE B_LIST_RUBRIC ADD CONSTRAINT DF_B_LIST_RUBRIC_VISIBLE DEFAULT 'Y' FOR VISIBLE
GO
ALTER TABLE B_LIST_RUBRIC ADD CONSTRAINT FK_B_LIST_RUBRIC_LID FOREIGN KEY (LID) REFERENCES B_LANG(LID)
GO

CREATE TABLE B_SUBSCRIPTION
(
	ID		INT		NOT NULL IDENTITY(1,1),
	DATE_INSERT	DATETIME	NOT NULL,
	DATE_UPDATE	DATETIME	NULL,
	USER_ID		INT		NULL REFERENCES B_USER (ID),
	ACTIVE		CHAR(1)		NOT NULL,
	EMAIL		VARCHAR(255)	NOT NULL,
	FORMAT		VARCHAR(4)	NOT NULL,
	CONFIRM_CODE	VARCHAR(8)	NULL,
	CONFIRMED	CHAR(1)		NOT NULL,
	DATE_CONFIRM	DATETIME	NOT NULL
)
GO
ALTER TABLE B_SUBSCRIPTION ADD CONSTRAINT PK_B_SUBSCRIPTION PRIMARY KEY (ID)
GO
CREATE UNIQUE INDEX UK_SUBSCRIPTION_EMAIL ON B_SUBSCRIPTION (EMAIL)
GO
CREATE INDEX IX_DATE_CONFIRM ON B_SUBSCRIPTION (CONFIRMED, DATE_CONFIRM)
GO
ALTER TABLE B_SUBSCRIPTION ADD CONSTRAINT DF_B_SUBSCRIPTION_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_SUBSCRIPTION ADD CONSTRAINT DF_B_SUBSCRIPTION_FORMAT DEFAULT 'text' FOR FORMAT
GO
ALTER TABLE B_SUBSCRIPTION ADD CONSTRAINT DF_B_SUBSCRIPTION_CONFIRMED DEFAULT 'N' FOR CONFIRMED
GO

CREATE TABLE B_SUBSCRIPTION_RUBRIC
(
	SUBSCRIPTION_ID	INT NOT NULL,
	LIST_RUBRIC_ID	INT NOT NULL
)
GO
CREATE UNIQUE INDEX UK_SUBSCRIPTION_RUBRIC ON B_SUBSCRIPTION_RUBRIC (SUBSCRIPTION_ID,LIST_RUBRIC_ID)
GO
ALTER TABLE B_SUBSCRIPTION_RUBRIC ADD CONSTRAINT FK_B_SUBSCRIPTION_RUBRIC_SUBS_ID FOREIGN KEY (SUBSCRIPTION_ID) REFERENCES B_SUBSCRIPTION(ID)
GO
ALTER TABLE B_SUBSCRIPTION_RUBRIC ADD CONSTRAINT FK_B_SUBSCRIPTION_RUBRIC_LIST_ID FOREIGN KEY (LIST_RUBRIC_ID) REFERENCES B_LIST_RUBRIC(ID)
GO

CREATE TABLE B_POSTING
(
	ID		INT		NOT NULL IDENTITY(1,1),
	TIMESTAMP_X	DATETIME	NOT NULL,
	STATUS		CHAR(1)		NOT NULL,
	DATE_SENT	DATETIME	NULL,
	SENT_BCC	TEXT		NULL,
	FROM_FIELD	VARCHAR(255)	NOT NULL,
	TO_FIELD	VARCHAR(255)	NULL,
	BCC_FIELD	TEXT		NULL,
	EMAIL_FILTER	VARCHAR(255)	NULL,
	SUBJECT		VARCHAR(255)	NOT NULL,
	BODY_TYPE	VARCHAR(4)	NOT NULL,
	BODY		TEXT		NOT NULL,
	DIRECT_SEND	CHAR(1)		NOT NULL,
	CHARSET		VARCHAR(50)	NULL,
	SUBSCR_FORMAT	VARCHAR(4)	NULL,
	ERROR_EMAIL	TEXT		NULL,
	AUTO_SEND_TIME	DATETIME	NULL,
	BCC_TO_SEND	TEXT		NULL
)
GO
ALTER TABLE B_POSTING ADD CONSTRAINT PK_B_POSTING PRIMARY KEY (ID)
GO
ALTER TABLE B_POSTING ADD CONSTRAINT DF_B_POSTING_TIMESTAMP_X DEFAULT GETDATE() FOR TIMESTAMP_X
GO
ALTER TABLE B_POSTING ADD CONSTRAINT DF_B_POSTING_STATUS DEFAULT 'D' FOR STATUS
GO
ALTER TABLE B_POSTING ADD CONSTRAINT DF_B_POSTING_BODY_TYPE DEFAULT 'text' FOR BODY_TYPE
GO
ALTER TABLE B_POSTING ADD CONSTRAINT DF_B_POSTING_DIRECT_SEND DEFAULT 'N' FOR DIRECT_SEND
GO
create trigger B_POSTING_UPDATE on B_POSTING for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_POSTING SET
		TIMESTAMP_X = GETDATE()
	FROM 
		B_POSTING U,
		INSERTED I,
		DELETED D
	WHERE 
		U.ID = I.ID 
		and U.ID = D.ID
end
GO

CREATE TABLE B_POSTING_RUBRIC
(
	POSTING_ID	INT NOT NULL,
	LIST_RUBRIC_ID	INT NOT NULL
)
GO
CREATE UNIQUE INDEX UK_POSTING_POSTING_RUBRIC ON B_POSTING_RUBRIC (POSTING_ID,LIST_RUBRIC_ID)
GO
ALTER TABLE B_POSTING_RUBRIC ADD CONSTRAINT FK_B_POSTING_RUBRIC_POST_ID FOREIGN KEY (POSTING_ID) REFERENCES B_POSTING(ID)
GO
ALTER TABLE B_POSTING_RUBRIC ADD CONSTRAINT FK_B_POSTING_RUBRIC_LIST_ID FOREIGN KEY (LIST_RUBRIC_ID) REFERENCES B_LIST_RUBRIC(ID)
GO

CREATE TABLE B_POSTING_GROUP
(
	POSTING_ID	INT NOT NULL,
	GROUP_ID	INT NOT NULL
)
GO
CREATE UNIQUE INDEX UK_POSTING_POSTING_GROUP ON B_POSTING_GROUP (POSTING_ID,GROUP_ID)
GO
ALTER TABLE B_POSTING_GROUP ADD CONSTRAINT FK_B_POSTING_GROUP_POST_ID FOREIGN KEY (POSTING_ID) REFERENCES B_POSTING(ID)
GO
ALTER TABLE B_POSTING_GROUP ADD CONSTRAINT FK_B_POSTING_GROUP_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES B_GROUP(ID)
GO

CREATE TABLE B_POSTING_FILE
(
	POSTING_ID	INT NOT NULL,
	FILE_ID		INT NOT NULL
)
GO
CREATE UNIQUE INDEX UK_POSTING_POSTING_FILE ON B_POSTING_FILE (POSTING_ID,FILE_ID)
GO
ALTER TABLE B_POSTING_FILE ADD CONSTRAINT FK_B_POSTING_FILE_POST_ID FOREIGN KEY (POSTING_ID) REFERENCES B_POSTING(ID)
GO
ALTER TABLE B_POSTING_FILE ADD CONSTRAINT FK_B_B_POSTING_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES B_FILE(ID)
GO
CREATE TABLE B_POSTING_LOCK
(
	ID		INT		NOT NULL,
	TIMESTAMP_X	DATETIME	NOT NULL
)
GO
ALTER TABLE B_POSTING_LOCK ADD CONSTRAINT PK_B_POSTING_LOCK PRIMARY KEY (ID)
GO

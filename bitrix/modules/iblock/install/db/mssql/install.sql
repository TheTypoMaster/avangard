CREATE TABLE B_IBLOCK_TYPE
(
	ID varchar(50) NOT NULL,
	SECTIONS char(1) NOT NULL,
	EDIT_FILE_BEFORE varchar(255) NULL,
	EDIT_FILE_AFTER varchar(255) NULL,
	IN_RSS char(1) NOT NULL,
	SORT int NOT NULL
)
GO
ALTER TABLE B_IBLOCK_TYPE ADD CONSTRAINT PK_B_IBLOCK_TYPE PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK_TYPE ADD CONSTRAINT DF_B_IBLOCK_TYPE_SECTIONS DEFAULT 'Y' FOR SECTIONS
GO
ALTER TABLE B_IBLOCK_TYPE ADD CONSTRAINT DF_B_IBLOCK_TYPE_IN_RSS DEFAULT 'Y' FOR IN_RSS
GO
ALTER TABLE B_IBLOCK_TYPE ADD CONSTRAINT DF_B_IBLOCK_TYPE_SORT DEFAULT '500' FOR SORT
GO


CREATE TABLE B_IBLOCK_TYPE_LANG
(
	IBLOCK_TYPE_ID varchar(50) NOT NULL,
	LID char(2) NOT NULL,
	NAME varchar(100) NOT NULL,
	SECTION_NAME varchar(100) NULL,
	ELEMENT_NAME varchar(100) NOT NULL
)
GO


CREATE TABLE B_IBLOCK
(
	ID int NOT NULL IDENTITY (1, 1),
	TIMESTAMP_X datetime NOT NULL,
	IBLOCK_TYPE_ID varchar(50) NOT NULL,
	LID char(2) NOT NULL,
	CODE varchar(50) NULL,
	NAME varchar(255) NOT NULL,
	ACTIVE char(1) NOT NULL,
	SORT int NOT NULL,
	LIST_PAGE_URL varchar(255) NULL,
	DETAIL_PAGE_URL varchar(255) NULL,
	SECTION_PAGE_URL varchar(255) NULL,
	PICTURE int NULL,
	DESCRIPTION text NULL,
	DESCRIPTION_TYPE char(4) NOT NULL,
	RSS_TTL int NOT NULL,
	RSS_ACTIVE char(1) NOT NULL,
	RSS_FILE_ACTIVE char(1) NOT NULL,
	RSS_FILE_LIMIT int NULL,
	RSS_FILE_DAYS int NULL,
	RSS_YANDEX_ACTIVE char(1) NOT NULL,
	XML_ID varchar(255) NULL,
	TMP_ID varchar(40) NULL,
	INDEX_ELEMENT char(1) NOT NULL,
	INDEX_SECTION char(1) NOT NULL,
	VERSION int NOT NULL,
	LAST_CONV_ELEMENT int NOT NULL,
	EDIT_FILE_BEFORE varchar(255) NULL,
	EDIT_FILE_AFTER varchar(255) NULL
)
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT PK_B_IBLOCK PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_TIMESTAMP_X DEFAULT GETDATE() FOR TIMESTAMP_X
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_SORT DEFAULT '500' FOR SORT
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_DESCRIPTION_TYPE DEFAULT 'text' FOR DESCRIPTION_TYPE
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_RSS_TTL DEFAULT '24' FOR RSS_TTL
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_RSS_ACTIVE DEFAULT 'Y' FOR RSS_ACTIVE
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_RSS_FILE_ACTIVE DEFAULT 'N' FOR RSS_FILE_ACTIVE
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_RSS_YANDEX_ACTIVE DEFAULT 'N' FOR RSS_YANDEX_ACTIVE
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_INDEX_ELEMENT DEFAULT 'Y' FOR INDEX_ELEMENT
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_INDEX_SECTION DEFAULT 'N' FOR INDEX_SECTION
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_VERSION DEFAULT 1 FOR VERSION
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT DF_B_IBLOCK_LAST_CONV_ELEMENT DEFAULT 0 FOR LAST_CONV_ELEMENT
GO

ALTER TABLE B_IBLOCK ADD CONSTRAINT FK_B_IBLOCK_B_IBLOCK_TYPE FOREIGN KEY (IBLOCK_TYPE_ID) REFERENCES B_IBLOCK_TYPE(ID)
GO
ALTER TABLE B_IBLOCK ADD CONSTRAINT FK_B_IBLOCK_B_LANG FOREIGN KEY (LID) REFERENCES B_LANG(LID)
GO

CREATE INDEX IX_B_IBLOCK_1 ON B_IBLOCK (IBLOCK_TYPE_ID, LID, ACTIVE)
GO

create trigger B_IBLOCK_UPDATE on B_IBLOCK for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_IBLOCK SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_IBLOCK U,
		INSERTED I,
		DELETED D
	WHERE 
		U.ID = I.ID 
	and U.ID = D.ID
end
GO


CREATE TABLE B_IBLOCK_SITE
(  
	IBLOCK_ID int NOT NULL,
	SITE_ID char(2) NOT NULL
)
GO
ALTER TABLE B_IBLOCK_SITE ADD CONSTRAINT PK_B_IBLOCK_SITE PRIMARY KEY (IBLOCK_ID, SITE_ID)
GO


CREATE TABLE B_IBLOCK_PROPERTY
(
	ID int NOT NULL IDENTITY (1, 1),
	TIMESTAMP_X datetime NOT NULL,
	IBLOCK_ID int NOT NULL,
	NAME varchar(100) NOT NULL,
	ACTIVE char(1) NOT NULL,
	SORT int NOT NULL,
	CODE varchar(50) NULL,
	DEFAULT_VALUE varchar(255) NULL,
	PROPERTY_TYPE char(1) NOT NULL,
	ROW_COUNT int NOT NULL,
	COL_COUNT int NOT NULL,
	LIST_TYPE char(1) NOT NULL,
	MULTIPLE char(1) NOT NULL,
	XML_ID varchar(100) NULL,
	FILE_TYPE varchar(200) NULL,
	MULTIPLE_CNT int NULL,
	TMP_ID varchar(40) NULL,
	LINK_IBLOCK_ID int NULL,
	WITH_DESCRIPTION char(1) NULL,
	SEARCHABLE char(1) NOT NULL,
	FILTRABLE char(1) NOT NULL,
	VERSION int NOT NULL,
	USER_TYPE varchar(255)
)
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT PK_B_IBLOCK_PROPERTY PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_TIMESTAMP_X DEFAULT GETDATE() FOR TIMESTAMP_X
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_SORT DEFAULT '500' FOR SORT
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_PROPERTY_TYPE DEFAULT 'S' FOR PROPERTY_TYPE
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_ROW_COUNT DEFAULT '1' FOR ROW_COUNT
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_COL_COUNT DEFAULT '30' FOR COL_COUNT
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_LIST_TYPE DEFAULT 'L' FOR LIST_TYPE
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_MULTIPLE DEFAULT 'N' FOR MULTIPLE
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_SEARCHABLE DEFAULT 'N' FOR SEARCHABLE
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_FILTRABLE DEFAULT 'N' FOR FILTRABLE
GO
ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_PROPERTY_VERSION DEFAULT 1 FOR VERSION
GO

ALTER TABLE B_IBLOCK_PROPERTY ADD CONSTRAINT FK_B_IBLOCK_PROPERTY_B_IBLOCK FOREIGN KEY (IBLOCK_ID) REFERENCES B_IBLOCK(ID)
GO

CREATE INDEX IX_B_IBLOCK_PROPERTY_1 ON B_IBLOCK_PROPERTY (IBLOCK_ID)
GO
CREATE INDEX IX_B_IBLOCK_PROPERTY_2 ON B_IBLOCK_PROPERTY (CODE)
GO

create trigger B_IBLOCK_PROPERTY_UPDATE on B_IBLOCK_PROPERTY for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_IBLOCK_PROPERTY SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_IBLOCK_PROPERTY U,
		INSERTED I,
		DELETED D
	WHERE 
		U.ID = I.ID 
	and U.ID = D.ID
end
GO


CREATE TABLE B_IBLOCK_SECTION
(
	ID int NOT NULL IDENTITY (1, 1),
	TIMESTAMP_X datetime NOT NULL,
	IBLOCK_ID int NOT NULL,
	IBLOCK_SECTION_ID int NULL,
	ACTIVE char(1) NOT NULL,
	GLOBAL_ACTIVE char(1) NOT NULL,
	SORT int NOT NULL,
	NAME varchar(255) NOT NULL,
	PICTURE int NULL,
	LEFT_MARGIN int NULL,
	RIGHT_MARGIN int NULL,
	DEPTH_LEVEL int NULL,
	DESCRIPTION text NULL,
	DESCRIPTION_TYPE char(4) NOT NULL,
	SEARCHABLE_CONTENT text NULL,
	CODE varchar(255) NULL,
	XML_ID varchar(255) NULL,
	TMP_ID varchar(40) NULL,
	DETAIL_PICTURE int NULL
)
GO
ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT PK_B_IBLOCK_SECTION PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT DF_B_IBLOCK_SECTION_TIMESTAMP_X DEFAULT GETDATE() FOR TIMESTAMP_X
GO
ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT DF_B_IBLOCK_SECTION_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT DF_B_IBLOCK_SECTION_GLOBAL_ACTIVE DEFAULT 'Y' FOR GLOBAL_ACTIVE
GO
ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT DF_B_IBLOCK_SECTION_SORT DEFAULT '500' FOR SORT
GO
ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT DF_B_IBLOCK_SECTION_DESCRIPTION_TYPE DEFAULT 'text' FOR DESCRIPTION_TYPE
GO

ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT FK_B_IBLOCK_SECTION_B_IBLOCK FOREIGN KEY (IBLOCK_ID) REFERENCES B_IBLOCK(ID)
GO
ALTER TABLE B_IBLOCK_SECTION ADD CONSTRAINT FK_B_IBLOCK_SECTION_B_IBLOCK_SECTION FOREIGN KEY (IBLOCK_SECTION_ID) REFERENCES B_IBLOCK_SECTION(ID)
GO

CREATE INDEX IX_B_IBLOCK_SECTION_1 ON B_IBLOCK_SECTION (IBLOCK_ID, IBLOCK_SECTION_ID)
GO
CREATE INDEX IX_B_IBLOCK_SECTION_2 ON B_IBLOCK_SECTION (IBLOCK_ID, LEFT_MARGIN, RIGHT_MARGIN)
GO

create trigger B_IBLOCK_SECTION_UPDATE on B_IBLOCK_SECTION for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_IBLOCK_SECTION SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_IBLOCK_SECTION U,
		INSERTED I,
		DELETED D
	WHERE 
		U.ID = I.ID 
	and U.ID = D.ID
end

if (not update(LEFT_MARGIN) and not update(RIGHT_MARGIN) and not update(GLOBAL_ACTIVE))
begin

	declare 
		@PICTURE_NEW int, 
		@PICTURE_OLD int, 
		@DETAIL_PICTURE_NEW int,
		@DETAIL_PICTURE_OLD int

	declare cCursor cursor for
		SELECT
			I.PICTURE					PICTURE_NEW,
			D.PICTURE					PICTURE_OLD,
			I.DETAIL_PICTURE			DETAIL_PICTURE_NEW,
			D.DETAIL_PICTURE			DETAIL_PICTURE_OLD
		FROM
			INSERTED I,
			DELETED D
		WHERE 
			I.ID = D.ID
			
	open cCursor

	while 1=1
	begin
		fetch next from cCursor into 
			@PICTURE_NEW, 
			@PICTURE_OLD, 
			@DETAIL_PICTURE_NEW,
			@DETAIL_PICTURE_OLD

		if @@fetch_status<>0
			break

		exec DELFILE @PICTURE_OLD, @PICTURE_NEW
		exec DELFILE @DETAIL_PICTURE_OLD, @DETAIL_PICTURE_NEW

	end
	close cCursor
	deallocate cCursor
end

if @@error <>0 
begin
	raiserror ('Trigger B_IBLOCK_SECTION_UPDATE Error',16,1)
end
GO

create trigger B_IBLOCK_SECTION_DELETE on B_IBLOCK_SECTION for delete as
declare 
	@PICTURE int, 
	@DETAIL_PICTURE int

declare cCursor cursor for
	SELECT
		D.PICTURE,
		D.DETAIL_PICTURE
	FROM
		DELETED D

open cCursor

while 1=1
begin
	fetch next from cCursor into 
		@PICTURE, 
		@DETAIL_PICTURE

	if @@fetch_status<>0
		break

	exec DELFILE @PICTURE, null
	exec DELFILE @DETAIL_PICTURE, null

end
close cCursor
deallocate cCursor

if @@error <>0 
begin
	raiserror ('Trigger B_IBLOCK_SECTION_DELETE Error',16,1)
end
GO


CREATE TABLE B_IBLOCK_ELEMENT
(
	ID int NOT NULL IDENTITY (1, 1),
	TIMESTAMP_X datetime NULL,
	MODIFIED_BY int NULL,
	DATE_CREATE datetime NULL,
	CREATED_BY int NULL,
	IBLOCK_ID int NOT NULL,
	IBLOCK_SECTION_ID int NULL,
	ACTIVE char(1) NOT NULL,
	ACTIVE_FROM datetime NULL,
	ACTIVE_TO datetime NULL,
	SORT int NOT NULL,
	NAME varchar(255) NOT NULL,
	PREVIEW_PICTURE int NULL,
	PREVIEW_TEXT varchar(2000) NULL,
	PREVIEW_TEXT_TYPE varchar(4) NOT NULL,
	DETAIL_PICTURE int NULL,
	DETAIL_TEXT text NULL,
	DETAIL_TEXT_TYPE varchar(4) NOT NULL,
	SEARCHABLE_CONTENT text NULL,
	WF_STATUS_ID int NULL,
	WF_PARENT_ELEMENT_ID int NULL,
	WF_NEW char(1) NULL,
	WF_LOCKED_BY int NULL,
	WF_DATE_LOCK datetime NULL,
	WF_COMMENTS text NULL,
	IN_SECTIONS char(1) NOT NULL,
	XML_ID varchar(255) NULL,
	CODE varchar(255) NULL,
	TMP_ID varchar(40) NULL,
	WF_LAST_HISTORY_ID int NULL,
	SHOW_COUNTER int NULL,
	SHOW_COUNTER_START datetime NULL
)
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT PK_B_IBLOCK_ELEMENT PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_TIMESTAMP_X DEFAULT GETDATE() FOR TIMESTAMP_X
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_SORT DEFAULT '500' FOR SORT
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_PREVIEW_TEXT_TYPE DEFAULT 'text' FOR PREVIEW_TEXT_TYPE
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_DETAIL_TEXT_TYPE DEFAULT 'text' FOR DETAIL_TEXT_TYPE
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_WF_STATUS_ID DEFAULT '1' FOR WF_STATUS_ID
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_IN_SECTIONS DEFAULT 'N' FOR IN_SECTIONS
GO

ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT FK_B_IBLOCK_ELEMENT_B_IBLOCK FOREIGN KEY (IBLOCK_ID) REFERENCES B_IBLOCK(ID)
GO
ALTER TABLE B_IBLOCK_ELEMENT ADD CONSTRAINT FK_B_IBLOCK_ELEMENT_B_IBLOCK_SECTION FOREIGN KEY (IBLOCK_SECTION_ID) REFERENCES B_IBLOCK_SECTION(ID)
GO

CREATE INDEX IX_B_IBLOCK_ELEMENT_1 ON B_IBLOCK_ELEMENT (IBLOCK_ID, IBLOCK_SECTION_ID)
GO
CREATE INDEX IX_IBLOCK_ELEMENT_4 ON B_IBLOCK_ELEMENT(IBLOCK_ID, XML_ID, WF_PARENT_ELEMENT_ID)
GO
CREATE INDEX IX_B_IBLOCK_ELEMENT_3 ON B_IBLOCK_ELEMENT (WF_PARENT_ELEMENT_ID)
GO
CREATE INDEX IX_B_IBLOCK_ELEMENT_4 ON B_IBLOCK_ELEMENT (IBLOCK_SECTION_ID)
GO
CREATE INDEX IX_B_IBLOCK_ELEMENT_5 ON B_IBLOCK_ELEMENT (ACTIVE_FROM, IBLOCK_ID)
GO
CREATE INDEX IX_B_IBLOCK_ELEMENT_6 ON B_IBLOCK_ELEMENT (IBLOCK_ID, WF_STATUS_ID, WF_PARENT_ELEMENT_ID, ACTIVE_FROM)
GO

create trigger B_IBLOCK_ELEMENT_UPDATE on B_IBLOCK_ELEMENT for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_IBLOCK_ELEMENT SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_IBLOCK_ELEMENT U,
		INSERTED I
	WHERE 
		U.ID = I.ID 
end

declare 
	@PREVIEW_PICTURE_NEW int, 
	@PREVIEW_PICTURE_OLD int, 
	@DETAIL_PICTURE_NEW int,
	@DETAIL_PICTURE_OLD int

declare cCursor cursor for
	SELECT
		I.PREVIEW_PICTURE	PREVIEW_PICTURE_NEW,
		D.PREVIEW_PICTURE	PREVIEW_PICTURE_OLD,
		I.DETAIL_PICTURE	DETAIL_PICTURE_NEW,
		D.DETAIL_PICTURE	DETAIL_PICTURE_OLD
	FROM
		INSERTED I,
		DELETED D
	WHERE 
		I.ID = D.ID
		
open cCursor

while 1=1
begin
	fetch next from cCursor into 
		@PREVIEW_PICTURE_NEW, 
		@PREVIEW_PICTURE_OLD, 
		@DETAIL_PICTURE_NEW,
		@DETAIL_PICTURE_OLD

	if @@fetch_status<>0
		break

	exec DELFILE @PREVIEW_PICTURE_OLD, @PREVIEW_PICTURE_NEW
	exec DELFILE @DETAIL_PICTURE_OLD, @DETAIL_PICTURE_NEW

end
close cCursor
deallocate cCursor

if @@error <>0 
begin
	raiserror ('Trigger B_IBLOCK_ELEMENT_UPDATE Error',16,1)
end
GO

create trigger B_IBLOCK_ELEMENT_DELETE on B_IBLOCK_ELEMENT for delete as
declare 
	@PREVIEW_PICTURE int, 
	@DETAIL_PICTURE int

declare cCursor cursor for
	SELECT
		D.PREVIEW_PICTURE,
		D.DETAIL_PICTURE
	FROM
		DELETED D

open cCursor

while 1=1
begin
	fetch next from cCursor into 
		@PREVIEW_PICTURE, 
		@DETAIL_PICTURE

	if @@fetch_status<>0
		break

	exec DELFILE @PREVIEW_PICTURE, null
	exec DELFILE @DETAIL_PICTURE, null

end
close cCursor
deallocate cCursor

if @@error <>0 
begin
	raiserror ('Trigger B_IBLOCK_ELEMENT_DELETE Error',16,1)
end
GO


CREATE TABLE B_IBLOCK_ELEMENT_PROPERTY
(
	ID int NOT NULL IDENTITY (1, 1),
	IBLOCK_PROPERTY_ID int NOT NULL,
	IBLOCK_ELEMENT_ID int NOT NULL,
	VALUE varchar(2000) NOT NULL,
	VALUE_TYPE char(4) NOT NULL,
	VALUE_ENUM int NULL,
	VALUE_NUM numeric(18,4) NULL,
	DESCRIPTION varchar(255) NULL
)
GO
ALTER TABLE B_IBLOCK_ELEMENT_PROPERTY ADD CONSTRAINT PK_B_IBLOCK_ELEMENT_PROPERTY PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK_ELEMENT_PROPERTY ADD CONSTRAINT DF_B_IBLOCK_ELEMENT_PROPERTY_VALUE_TYPE DEFAULT 'text' FOR VALUE_TYPE
GO

ALTER TABLE B_IBLOCK_ELEMENT_PROPERTY ADD CONSTRAINT FK_B_IBLOCK_ELEMENT_PROPERTY_B_IBLOCK_PROPERTY FOREIGN KEY (IBLOCK_PROPERTY_ID) REFERENCES B_IBLOCK_PROPERTY(ID)
GO
ALTER TABLE B_IBLOCK_ELEMENT_PROPERTY ADD CONSTRAINT FK_B_IBLOCK_ELEMENT_PROPERTY_B_IBLOCK_ELEMENT FOREIGN KEY (IBLOCK_ELEMENT_ID) REFERENCES B_IBLOCK_ELEMENT(ID)
GO

CREATE INDEX IX_B_IBLOCK_ELEMENT_PROPERTY_1 ON B_IBLOCK_ELEMENT_PROPERTY (IBLOCK_ELEMENT_ID, IBLOCK_PROPERTY_ID)
GO
CREATE INDEX IX_B_IBLOCK_ELEMENT_PROPERTY_2 ON B_IBLOCK_ELEMENT_PROPERTY (IBLOCK_PROPERTY_ID)
GO
CREATE INDEX IX_B_IBLOCK_ELEMENT_PROPERTY_3 ON B_IBLOCK_ELEMENT_PROPERTY (VALUE_ENUM, IBLOCK_PROPERTY_ID)
GO


CREATE TABLE B_IBLOCK_PROPERTY_ENUM
(
	ID int NOT NULL IDENTITY (1, 1),
	PROPERTY_ID int NOT NULL,
	VALUE varchar(255) NOT NULL,
	DEF char(1) NOT NULL,
	SORT int NOT NULL,
	XML_ID varchar(200) NOT NULL,
	TMP_ID varchar(40) NULL
)
GO
ALTER TABLE B_IBLOCK_PROPERTY_ENUM ADD CONSTRAINT PK_B_IBLOCK_PROPERTY_ENUM PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK_PROPERTY_ENUM ADD CONSTRAINT FK_B_IBLOCK_PROPERTY_ENUM_DEF DEFAULT 'N' FOR DEF
GO
ALTER TABLE B_IBLOCK_PROPERTY_ENUM ADD CONSTRAINT FK_B_IBLOCK_PROPERTY_ENUM_SORT DEFAULT '500' FOR SORT
GO

ALTER TABLE B_IBLOCK_PROPERTY_ENUM ADD CONSTRAINT FK_B_IBLOCK_PROPERTY_ENUM_PROPERTY_ID FOREIGN KEY (PROPERTY_ID) REFERENCES B_IBLOCK_PROPERTY(ID)
GO

CREATE UNIQUE INDEX IX_B_IBLOCK_PROPERTY_ENUM_1 ON B_IBLOCK_PROPERTY_ENUM (PROPERTY_ID, XML_ID)
GO


CREATE TABLE B_IBLOCK_GROUP
(
	IBLOCK_ID int NOT NULL,
	GROUP_ID int NOT NULL,
	PERMISSION char(1) NOT NULL
)
GO
ALTER TABLE B_IBLOCK_GROUP ADD CONSTRAINT FK_B_IBLOCK_GROUP_B_IBLOCK FOREIGN KEY (IBLOCK_ID) REFERENCES B_IBLOCK(ID)
GO
ALTER TABLE B_IBLOCK_GROUP ADD CONSTRAINT FK_B_IBLOCK_GROUP_B_GROUP FOREIGN KEY (GROUP_ID) REFERENCES B_GROUP(ID)
GO

CREATE UNIQUE INDEX UX_B_IBLOCK_GROUP_1 ON B_IBLOCK_GROUP (IBLOCK_ID, GROUP_ID)
GO


CREATE TABLE B_IBLOCK_SECTION_ELEMENT
(
	IBLOCK_SECTION_ID int NOT NULL,
	IBLOCK_ELEMENT_ID int NOT NULL,
	ADDITIONAL_PROPERTY_ID int NULL
)
GO
ALTER TABLE B_IBLOCK_SECTION_ELEMENT ADD CONSTRAINT FK_B_IBLOCK_SECTION_ELEMENT_B_IBLOCK_ELEMENT FOREIGN KEY (IBLOCK_ELEMENT_ID) REFERENCES B_IBLOCK_ELEMENT(ID) ON DELETE CASCADE
GO
ALTER TABLE B_IBLOCK_SECTION_ELEMENT ADD CONSTRAINT FK_B_IBLOCK_SECTION_ELEMENT_B_IBLOCK_SECTION FOREIGN KEY (IBLOCK_SECTION_ID) REFERENCES B_IBLOCK_SECTION(ID) ON DELETE CASCADE
GO

CREATE UNIQUE INDEX ux_iblock_section_element ON B_IBLOCK_SECTION_ELEMENT(IBLOCK_SECTION_ID, IBLOCK_ELEMENT_ID, ADDITIONAL_PROPERTY_ID)
GO
CREATE INDEX UX_IBLOCK_SECTION_ELEMENT2 ON B_IBLOCK_SECTION_ELEMENT(IBLOCK_ELEMENT_ID)
GO


CREATE TABLE B_IBLOCK_RSS
(
	ID int NOT NULL IDENTITY (1, 1),
	IBLOCK_ID int NOT NULL,
	NODE varchar(50) NOT NULL,
	NODE_VALUE varchar(250) NULL
)
GO
ALTER TABLE B_IBLOCK_RSS ADD CONSTRAINT PK_B_IBLOCK_RSS PRIMARY KEY (ID)
GO

ALTER TABLE B_IBLOCK_RSS ADD CONSTRAINT FK_B_IBLOCK_RSS_B_IBLOCK FOREIGN KEY (IBLOCK_ID) REFERENCES B_IBLOCK(ID)
GO


CREATE TABLE B_IBLOCK_CACHE
(
   CACHE_KEY varchar(35) NOT NULL,
   CACHE text NOT NULL,
   CACHE_DATE datetime NOT NULL
)
GO
ALTER TABLE B_IBLOCK_CACHE ADD CONSTRAINT PK_B_IBLOCK_CACHE PRIMARY KEY (CACHE_KEY)
GO

ALTER TABLE B_IBLOCK_CACHE ADD CONSTRAINT FK_B_IBLOCK_CACHE_CACHE_DATE DEFAULT GETDATE() FOR CACHE_DATE
GO